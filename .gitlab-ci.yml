image: golang:1.16-alpine3.14

stages:
    - build
    - test
    - dockerize
    - deploy

.go-cache:
  variables:
    GOPATH: /go
  before_script:
    - mkdir -p /go/src/gitlab.com/mfcekirdek/in-memory-store /go/src/_/builds/mfcekirdek/in-memory-store
    - cp -r $CI_PROJECT_DIR /go/src/gitlab.com/mfcekirdek/in-memory-store/app
    - ln -s /go/src/gitlab.com/mfcekirdek/in-memory-store /go/src/_/builds/mfcekirdek/in-memory-store
    - go mod download
    - go get -u golang.org/x/lint/golint
  cache:
    paths:
      - /go/pkg/mod/
      - /go/golang.org
      - /go/google.golang.org
      - /go/gopkg.in

build-job:
  stage: build
  extends: .go-cache
  before_script:
    - go get -d ./...
    - go mod tidy
  script:
    - echo "Compiling the code..."
    - go build -o app ./cmd/main.go
  artifacts:
    paths:
      - app

lint-test-job:
  image: golangci/golangci-lint:v1.41.1
  stage: test
  extends: .go-cache
  variables:
    LINT_TIMEOUT: 5m
    LINT_CONFIG_PATH: "configs/linter/.golangci.yml"
    EXTRA_PARAMETERS: ""
  script:
    - golangci-lint run -c $LINT_CONFIG_PATH -v --timeout $LINT_TIMEOUT $EXTRA_PARAMETERS --fix

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  extends: .go-cache
  script:
    - CGO_ENABLED=0 go test -v ./... -coverprofile=unit_coverage.out -tags=unit
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/unit_coverage.out

dockerize-job:   # This job runs in the dockerize stage.
  stage: dockerize    # It only runs when *both* jobs in the test stage complete successfully.
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    DOCKER_PROJECT_DIR: $CI_PROJECT_DIR
    DOCKER_DOCKERFILE: $CI_PROJECT_DIR/deployments/Dockerfile
    DOCKER_DESTINATION: $CI_REGISTRY_IMAGE/${CI_COMMIT_REF_SLUG}:${CI_PIPELINE_ID}
    DOCKER_DESTINATION_LATEST: $CI_REGISTRY_IMAGE/${CI_COMMIT_REF_SLUG}:latest
    DOCKER_DESTINATION_BRANCH: $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_SLUG}
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context $DOCKER_PROJECT_DIR
      --cache=true
      --dockerfile $DOCKER_DOCKERFILE
      --destination $DOCKER_DESTINATION
      --destination $DOCKER_DESTINATION_LATEST
      --destination $DOCKER_DESTINATION_BRANCH

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only starts when the job in the dockerize stage completes successfully.
  script:
    - echo "Deploying application..."